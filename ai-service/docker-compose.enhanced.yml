version: '3.8'

services:
  # Enhanced ReAct Agent
  react-agent:
    build:
      context: .
      dockerfile: Dockerfile.enhanced
    container_name: react-agent-enhanced
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - JWT_SECRET=${JWT_SECRET:-your-secret-key-change-this}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=ai_agent
      - DB_USER=postgres
      - DB_PASSWORD=${DB_PASSWORD:-postgres}
    depends_on:
      - redis
      - postgres
    restart: unless-stopped
    networks:
      - ai-network
    volumes:
      - ./logs:/app/logs
      - ./demo:/app/demo:ro
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis for caching
  redis:
    image: redis:7-alpine
    container_name: ai-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    restart: unless-stopped
    networks:
      - ai-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # PostgreSQL for chat history
  postgres:
    image: postgres:15-alpine
    container_name: ai-postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=ai_agent
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${DB_PASSWORD:-postgres}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - ai-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Nginx reverse proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: ai-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - react-agent
    restart: unless-stopped
    networks:
      - ai-network

volumes:
  redis_data:
  postgres_data:

networks:
  ai-network:
    driver: bridge